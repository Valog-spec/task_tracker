import os

import requests
import streamlit as st
from dotenv import load_dotenv

load_dotenv()

API_BASE_URL = os.getenv("API_BASE_URL", "http://localhost:8080")
st.set_page_config(page_title="JWT  Test")


def main() -> None:
    st.title("JWT –∞—É–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")

    page = st.sidebar.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É", ["–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–õ–æ–≥–∏–Ω", "–ü—Ä–æ—Ñ–∏–ª—å", "–í—ã—Ö–æ–¥"]
    )

    if page == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
        registration()
    elif page == "–õ–æ–≥–∏–Ω":
        login()
    elif page == "–ü—Ä–æ—Ñ–∏–ª—å":
        profile()
    elif page == "–í—ã—Ö–æ–¥":
        logout()


def registration() -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    st.header("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")

    with st.form("registration_form"):
        email = st.text_input("Email")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        submit = st.form_submit_button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")

        if submit:
            if not email or not password:
                st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
                return

            try:
                response = requests.post(
                    f"{API_BASE_URL}/auth/register",
                    json={"email": email, "password": password},
                )

                if response.status_code == 201:
                    st.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.")
                else:
                    error_msg = response.json().get("detail", "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                    st.error({error_msg})

            except requests.exceptions.RequestException as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")


def login() -> None:
    """–ê—É—Ç–µ—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    st.header("–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")

    with st.form("login_form"):
        email = st.text_input("Email")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        submit = st.form_submit_button("–í–æ–π—Ç–∏")

        if submit:
            if not email or not password:
                st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
                return

            try:
                response = requests.post(
                    f"{API_BASE_URL}/auth/login",
                    json={"email": email, "password": password},
                    headers={"Content-Type": "application/json"},
                )

                if response.status_code == 200:
                    data = response.json()
                    st.session_state.access_token = data["access_token"]
                    st.session_state.user_email = email

                    if response.cookies.get("refresh_token"):
                        st.session_state.refresh_token = response.cookies.get(
                            "refresh_token"
                        )

                    st.success(f"–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {email}")
                    st.json(data)
                else:
                    error_msg = response.json().get("detail", "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞")
                    st.error({error_msg})

            except requests.exceptions.RequestException as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")


def profile() -> None:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    st.header("–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    if "access_token" not in st.session_state:
        st.warning("‚ö†–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
        return

    if st.button("–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã"):
        refresh_tokens()

    st.subheader("–¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è")
    st.write(f"**Email:** {st.session_state.get('user_email', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
    st.write(f"**Access Token:** `{st.session_state.access_token}`")

    if st.button("üì° –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è"):
        try:
            headers = {"Authorization": f"Bearer {st.session_state.access_token}"}
            response = requests.get(f"{API_BASE_URL}/users/me", headers=headers)
            if response.status_code == 200:
                st.success("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                st.json(response.json())
            else:
                error_msg = response.json().get("detail", "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞")
                st.error(error_msg)

        except requests.exceptions.RequestException as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")


def logout() -> None:
    """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
    st.header("–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")

    if "access_token" not in st.session_state:
        st.info("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã")
        return

    if st.button("–í—ã–π—Ç–∏"):
        try:
            headers = {"Authorization": f"Bearer {st.session_state.access_token}"}

            cookies = {}
            if "refresh_token" in st.session_state:
                cookies = {"refresh_token": st.session_state.refresh_token}

            response = requests.post(
                f"{API_BASE_URL}/auth/logout", headers=headers, cookies=cookies
            )

            if response.status_code == 200:
                for key in list(st.session_state.keys()):
                    del st.session_state[key]

                st.success("–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            else:
                error_msg = response.json().get("detail", "–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞")
                st.error(error_msg)

        except requests.exceptions.RequestException as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")


def refresh_tokens() -> None:
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ access token —á–µ—Ä–µ–∑ refresh token"""
    if "refresh_token" not in st.session_state:
        st.error("Refresh —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    try:
        cookies = {"refresh_token": st.session_state.refresh_token}
        response = requests.post(f"{API_BASE_URL}/auth/refresh", cookies=cookies)

        if response.status_code == 200:
            data = response.json()
            st.session_state.access_token = data["access_token"]
            if response.cookies.get("refresh_token"):
                st.session_state.refresh_token = response.cookies.get("refresh_token")
                st.success("–¢–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")

        else:
            error_msg = response.json().get("detail", "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
            st.error(error_msg)

    except requests.exceptions.RequestException as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")


if __name__ == "__main__":
    main()
    print(API_BASE_URL)
